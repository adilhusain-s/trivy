name: Test
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
      - "docs/**"
      - "mkdocs.yml"
      - "LICENSE"

jobs:
  test:
    name: Test
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: adilhusain-s/setup-go@main
        with:
          go-version-file: go.mod

      - name: go mod tidy
        run: |
          go mod tidy
          if [ -n "$(git status --porcelain)" ]; then
            echo "Run 'go mod tidy' and push it"
            exit 1
          fi
        if: matrix.operating-system == 'ubuntu-latest'

      - name: Lint
        uses: golangci/golangci-lint-action@v3.3.0
        with:
          version: v1.49
          args: --deadline=30m
          skip-cache: true # https://github.com/golangci/golangci-lint-action/issues/244#issuecomment-1052197778
        if: matrix.operating-system == 'ubuntu-latest'

      # Install tools
      - uses: adilhusain-s/aqua-installer@main
        with:
          aqua_version: v2.0.1-0

      - name: Run unit tests
        run: make test

  integration:
    name: Integration Test
    runs-on: self-hosted
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Set up Go
        uses: adilhusain-s/setup-go@main
        with:
          go-version-file: go.mod

      - name: Run integration tests
        run: make test-integration

  module-test:
    name: Module Integration Test
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: adilhusain-s/setup-go@main
        with:
          go-version-file: go.mod

      # Install tools
      - uses: adilhusain-s/aqua-installer@main
        with:
          aqua_version: v2.0.1-0

      - name: Run module integration tests
        shell: bash
        run: |
          make test-module-integration

  build-test:
    name: Build Test
    runs-on: self-hosted
    env:
      DOCKER_CLI_EXPERIMENTAL: "enabled"
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Show available Docker Buildx platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: adilhusain-s/setup-go@main
        with:
          go-version-file: go.mod

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          version: v1.4.1
          args: release --skip-sign --snapshot --rm-dist --skip-publish --timeout 90m
